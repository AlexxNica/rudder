<!--
Copyright 2011 Normation SAS

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

In accordance with the terms of section 7 (7. Additional Terms.) of
the GNU Affero GPL v3, the copyright holders add the following
Additional permissions:
Notwithstanding to the terms of section 5 (5. Conveying Modified Source
Versions) and 6 (6. Conveying Non-Source Forms.) of the GNU Affero GPL v3
licence, when you create a Related Module, this Related Module is
not considered as a part of the work and may be distributed under the
license agreement of your choice.
A "Related Module" means a set of sources files including their
documentation that, without modification of the Source Code, enables
supplementary functions or services in addition to those offered by
the Software.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see <http://www.gnu.org/licenses/agpl.html>.
-->

<!-- 
 The "authentication" tag can have a "hash" argument, with these allowed values: 
 "md5", "sha1", "sha256", "sha-256", "sha512", "sha-512"

 For example: <authentication hash="sha">

 To hash passwords for this format, run these commands:
 "md5"                    read mypass; echo -n $mypass | md5sum
 "sha" or "sha1"          read mypass; echo -n $mypass | shasum
 "sha256" or "sha-256"    read mypass; echo -n $mypass | sha256sum
 "sha512" or "sha-512"    read mypass; echo -n $mypass | sha512sum

  After changing this file, the rudder webapp must be restarted to take changes
  into account: /etc/init.d/jetty restart
 -->

<!-- example with hash -->
<!-- <authentication hash="sha"> -->
<authentication>
  <user name="jon.doe"  password="secret" role="administrator" />
  <user name="alex.bar" password="secret2" role="read_only"/>
  <!-- Authorizations
  You must define a role attribute to every user you add
  there's 7 predefined roles:
      administrator (all rights)
    , administration_only (all administration)
    , user (all node, configuration))
    , configuration(all configuration)
    , read_only (read all)
    , compliance(read rule)
    , inventory (read node)
  You can also have custom roles, format is role="(type_level,)*type_level"
    types are : node, group, deployement, administration, configuration, rule, technique, directive.
    levels are: read, write, edit, all(read, write, edit)
   -->
  <!--  exemple of bad lines -->
  <!--  <user name="" password="secret2" role="administrator"/>-->
  <!--  <user name="name" password="" role="administrator"/>-->
</authentication>
